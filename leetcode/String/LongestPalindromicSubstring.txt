5. Longest Palindromic Substring

Given a string S, find the longest palindromic substring in S. You may assume that the maximum length of S is 1000, and there exists one unique longest palindromic substring.

O(N^2) Solution:
public class Solution {
    private int maxLen = 1;
    private int maxIdx = 0;
    public String longestPalindrome(String s) {
        int len = s.length();
        for(int i = 0; i < len; i++){
            findPalindrome(s, len, i, 0);
            findPalindrome(s, len, i, 1);
        }
        return s.substring(maxIdx, maxIdx + maxLen);
    }
    
    private void findPalindrome(String str, int length, int i, int shift){
        int left = i;
        int right = i + shift;
        while(left >= 0 && right < length && str.charAt(left) == str.charAt(right)){
            if((right - left + 1) > maxLen){
                maxLen = right - left + 1;
                maxIdx = left;
            }
            left--;
            right++;
        }
    }
}