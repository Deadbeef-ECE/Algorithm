24. Swap Nodes in Pairs

Given a linked list, swap every two adjacent nodes and return its head.

For example,
Given 1->2->3->4, you should return the list as 2->1->4->3.

Your algorithm should use only constant space. You may not modify the values in the list, only nodes itself can be changed.

public class Solution {
    public ListNode swapPairs(ListNode head) {
        if(head == null ||head.next == null)   return head;
        
        ListNode dummy = new ListNode(-1);
        dummy.next = head;
       
        ListNode record = dummy;
        ListNode slow = head;
        ListNode fast = head.next;
        
        while(slow != null)
        {    
            slow.next = fast.next != null? fast.next:null;
            fast.next = slow;
            record.next = fast;
            
            if(slow.next == null)   break;
            record = slow;
            slow = slow.next;
            if(slow.next == null)   break;
            fast = slow.next;
        }
        head = dummy.next;
        return head;
    }
}