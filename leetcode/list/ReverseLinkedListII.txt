92. Reverse Linked List II 

Reverse a linked list from position m to n. Do it in-place and in one-pass.

For example:
Given 1->2->3->4->5->NULL, m = 2 and n = 4,

return 1->4->3->2->5->NULL.

Note:
Given m, n satisfy the following condition:
1 ≤ m ≤ n ≤ length of list.

public class Solution {
    public ListNode reverseBetween(ListNode head, int m, int n) {
        ListNode dummy = new ListNode(-1);
        dummy.next = head;
        ListNode prev = dummy;
        ListNode cur = head;
        
        // We needn't convert in this condition
        if(m == n)
            return head;
            
        for(int i = 1; i < m; i++){
            prev = cur;
            cur = cur.next;
        }
            
        ListNode p1 = null, p2 = null;
        if(cur != null) p1 = cur.next;
        if(p1 != null) p2 = p1.next;
            
        for(int i = m; i < n; i++){
            if(p1 != null)
                p1.next = cur;
            cur = p1;
            p1 = p2;
            if(p2 != null) p2 = p2.next;
        }
        prev.next.next = p1;
        prev.next = cur;

        return dummy.next;
    }
}