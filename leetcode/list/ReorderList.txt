143. Reorder List

Given a singly linked list L: L0→L1→…→Ln-1→Ln,
reorder it to: L0→Ln→L1→Ln-1→L2→Ln-2→…

You must do this in-place without altering the nodes' values.

For example,
Given {1,2,3,4}, reorder it to {1,4,2,3}.

public class Solution {
    public void reorderList(ListNode head) {
        if(head == null || head.next == null)   return;
        
        ListNode slow = head, fast = head;
        while(fast != null){
            fast = fast.next;
            if(fast == null || fast.next == null)   break;
            fast = fast.next;
            slow = slow.next;
        }
        ListNode head1 = head;
        ListNode head2 = slow.next;
        slow.next = null;
        
        //reverse the second list
        ListNode cur = head2, post = cur.next;
        cur.next = null;
        while(post != null){
            ListNode tmp = post.next;
            post.next = cur;
            cur = post;
            post = tmp;
        }
        head2 = cur;
        ListNode p = head1, q = head2;
        while(q != null){
            ListNode tmp1 = p.next;
            ListNode tmp2 = q.next;
            p.next = q;
            q.next = tmp1;
            p = tmp1;
            q = tmp2;
        }
    }
}