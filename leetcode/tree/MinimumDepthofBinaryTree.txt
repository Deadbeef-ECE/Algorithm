111. Minimum Depth of Binary Tree

Given a binary tree, find its minimum depth.

The minimum depth is the number of nodes along the shortest path from the root node down to the nearest leaf node.
===================================================================================
/**
 * Definition for binary tree
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public int minDepth(TreeNode root) {
        if(root == null)    return 0;
        LinkedList<TreeNode> nodes = new LinkedList<TreeNode>();
        LinkedList<Integer> counts = new LinkedList<Integer>();
        
        nodes.add(root);
        counts.add(1);
        while(!nodes.isEmpty()){
            TreeNode cur = nodes.poll();
            int count = counts.poll();
            if(cur.left == null && cur.right == null)   return count;
            if(cur.left != null){
                nodes.add(cur.left);
                counts.add(count+1);
            }
            if(cur.right != null){
                nodes.add(cur.right);
                counts.add(count+1);
            }
        }
        return 0;
    }
}