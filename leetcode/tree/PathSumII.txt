113. Path Sum II 
Given a binary tree and a sum, find all root-to-leaf paths where each path's sum equals the given sum.

For example:
Given the below binary tree and sum = 22,
              5
             / \
            4   8
           /   / \
          11  13  4
         /  \    / \
        7    2  5   1
return
[
   [5,4,11,2],
   [5,8,4,5]
]

public class Solution {
    public List<List<Integer>> pathSum(TreeNode root, int sum) {
        List<List<Integer>> ret = new LinkedList<List<Integer>>();
        if(root == null)    return ret;
        LinkedList<Integer> counts = new LinkedList<Integer>();
        
        pathSum(root, sum, counts, ret);
        return ret;
    }
    
    public void pathSum(TreeNode root, int sum, List<Integer> counts, List<List<Integer>> ret){
        if(root == null)    return;
        counts.add(root.val);
        if(root.left == null && root.right == null){
            if(sum-root.val == 0){
                LinkedList<Integer> tmp = new LinkedList<Integer>(counts);
                ret.add(tmp);
            }
        }
        pathSum(root.left, sum-root.val, counts, ret);
        pathSum(root.right, sum-root.val, counts, ret);
        
        counts.remove(counts.size()-1);
    }
}