98. Validate Binary Search Tree 

Given a binary tree, determine if it is a valid binary search tree (BST).

Assume a BST is defined as follows:

The left subtree of a node contains only nodes with keys less than the node's key.
The right subtree of a node contains only nodes with keys greater than the node's key.
Both the left and right subtrees must also be binary search trees.

public class Solution {
    TreeNode prev = null;
    public boolean isValidBST(TreeNode root) {
        return inOrder(root);
    }
    
    public boolean inOrder(TreeNode root){
        if(root == null)    return true;
        if(!inOrder(root.left))  return false;
        if(prev != null){
            if(root.val <= prev.val){
                return false;
            }
        }
        prev = root;
        if(!inOrder(root.right))
            return false;
        return true;
    }
}