60. Permutation Sequence

The set [1,2,3,â€¦,n] contains a total of n! unique permutations.

By listing and labeling all of the permutations in order,
We get the following sequence (ie, for n = 3):

"123"
"132"
"213"
"231"
"312"
"321"
Given n and k, return the kth permutation sequence.

public class Solution {
    public String getPermutation(int n, int k) {
        if(n == 0){
            return "";
        }
        List<Integer> numbers = new ArrayList<>(n);
        int totalPerm = 1;
        //Compute n! and stroe each unique number in the arraylist 
        //in the form {1, 2, 3, 4,...,n-1, n}
        for(int i = 1; i <= n; i++){
            totalPerm *= i; //1*2*3*..*n
            numbers.add(i);
        }
        if(k > totalPerm)
            return "";
        //get the (n-1)! by n!/n
        int inner = totalPerm/n;
        //start from 0
        k--;
        //build the string to store the digit
        StringBuilder ret = new StringBuilder();
        //has n in total
        for(int i = n - 1; i >= 1; i--){
            //get the index of number
            int indexOfNum = k/inner;
            //get the number according to the index
            int num = numbers.get(indexOfNum);
            //put the number to the string and remove from the list
            ret.append(String.valueOf(num));
            numbers.remove(indexOfNum);
            //get the remainder of k%inner(k-(n-1)!) to check the (n-2)! of (n-1)!
            k = k%inner;
            //get the (n-2)! from (n-1)!/(n-1)
            inner = inner/i;
        }
        ret.append(String.valueOf(numbers.get(0)));
        return ret.toString();
    }
}