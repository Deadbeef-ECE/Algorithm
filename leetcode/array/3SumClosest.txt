16. 3Sum Closest

Given an array S of n integers, find three integers in S such that the sum is closest to a given number, target. Return the sum of the three integers. You may assume that each input would have exactly one solution.

    For example, given array S = {-1 2 1 -4}, and target = 1.

    The sum that is closest to the target is 2. (-1 + 2 + 1 = 2).

public class Solution {
    public int threeSumClosest(int[] num, int target) {
        int closest = num[0] + num[1] + num[2];
        int diff = Math.abs(target - closest);
        Arrays.sort(num);
        
        for(int i = 0; i < num.length - 2; i++){
            int start = i + 1, end = num.length - 1;
            
            while(start < end){
                int sum = num[i] + num[start] + num[end];
                int newDiff = Math.abs(sum - target);
                if(newDiff < diff){
                    diff = newDiff;
                    closest = sum;
                }
                if(sum < target){//加少了点
                    start++;
                }else{//加多了
                    end--;
                }
            }
        }
        return closest;
    }
}