15. 3Sum

Given an array S of n integers, are there elements a, b, c in S such that a + b + c = 0? Find all unique triplets in the array which gives the sum of zero.

Note:
Elements in a triplet (a,b,c) must be in non-descending order. (ie, a ≤ b ≤ c)
The solution set must not contain duplicate triplets.
    For example, given array S = {-1 0 1 2 -1 -4},

    A solution set is:
    (-1, 0, 1)
    (-1, -1, 2)

  public class Solution {
    public List<List<Integer>> threeSum(int[] num) {
        Arrays.sort(num);
        LinkedList<List<Integer>> ret = new LinkedList<>();
        HashSet<List<Integer>> set = new HashSet<>();
        
        for(int i = 0; i < num.length - 2; i++){
            int start = i + 1, end = num.length -1;
            
            while(start < end){
                if(num[i] + num[start] + num[end] == 0){
                    LinkedList<Integer> bingo = new LinkedList<>();
                    bingo.add(num[i]);
                    bingo.add(num[start]);
                    bingo.add(num[end]);
                    set.add(bingo);
                    start++;
                    end--;
                }else if(num[i] + num[start] + num[end] < 0){//加少了，多加点，最小的往后挪挪
                    start++;
                }else{//加多了，少加点，最大的往前挪挪
                    end--;
                }
            }
        }
        ret.addAll(set);
        return ret;
    }
}